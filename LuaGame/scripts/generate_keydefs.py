# This script scans the GLFW header to extract and translate the key constants into an
# array of strings that can be loaded into Lua.

glfw_header_path = "../include/GLFW/glfw3.h"
keys_header_path = "../src/binding/lgapi_keydefs.gen.h"

keydef_typename   = "luagame_keydef";
keydef_arr_name   = "luagame_keydefs";
keydef_count_var  = "luagame_keydef_count";

struct_src = """struct {keydef_typename} {{
  const char *  name;
  int           glfw_key;
}};""".format(keydef_typename = keydef_typename);

# END CONFIG

import re
import os.path

def handle_define(key, value, is_first, stream):
  matched = re.match("GLFW_KEY_(.*)", key)
    
  if matched:
    print('key: ' + matched.group(1))
    string_name = matched.group(1).lower()
    value = matched.group(0)
    if not is_first: stream.write(",\n")
    stream.write((" " * 4) + "{\"" + string_name + "\", " + value + "}")
    return True
  else: return False
        
        
def parse(header, stream):
  stream.writelines([
    "// THIS FILE WAS GENERATED BY A SCRIPT - DO NOT EDIT IT DIRECTLY\n",
    "// GENERATED FROM {glfw_header_path}\n".format(glfw_header_path=glfw_header_path),
    "\n",
    "#pragma once\n",
    "\n",
    struct_src,
    "\n",
    "\n",
    "const {keydef_typename} {keydef_arr_name}[] = {{\n".format(keydef_typename = keydef_typename, keydef_arr_name=keydef_arr_name)
  ]);

    
  is_first = True
  keydef_count = 0  
  
  file = open(header, 'r')

  for line in file:
    define_statement = re.match("^\\s*\\#define\\s+([^\\s]+).*?([^\\s]+).*$", line)

    if define_statement:

      was_keydef = handle_define(define_statement.group(1), define_statement.group(2), is_first, stream)
      is_first = not was_keydef and is_first

      if was_keydef: keydef_count += 1
    
  file.close()

  stream.write(",\n    {NULL, NULL}\n};\n\n");
  stream.write("const unsigned int {} = {};\n".format(keydef_count_var, keydef_count));
 
outfile = open(keys_header_path, 'w')
parse(glfw_header_path, outfile)
outfile.close()

print()
print("keydefs written to {}\n".format(os.path.abspath(keys_header_path)));